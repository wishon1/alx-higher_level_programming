#!/usr/bin/python3
""" module for test case of the Base class."""



import os
import unittest
from models.base import Base



class TestBase(unittest.TestCase):
	""" TestBase - code for test casses forthe base class"""

def test_base(self):
	""" test case for base"""
	instance = Base()
	self.assertEqual(instance.id, 1)
	instance = Base()
	self.assertEqual(instance.id, 2)

	instance = Base()
	self.assertEqual(instance.id, 3)

	instance = Base(12)
	self.assertEqual(instance.id, 12)

	instance = Base(-2)
	self.assertEqual(instance.id, -2)

def to_json_string_test(self)
	"""test the to_json_string method:
	"""
	# Redirecting stdout for testing output.
	_buffer = io.StringIo()
	sys.stdout = _buffer
	# io.StringIO(): used to create an in-memory text stream commonly
        # used to capture or redirect the output that would typically go 
        # to the console or a file.
	# By redirecting sys.stdout to _buffer (an instance of io.StringIO()),
	# the code captures any output generated by the print() function and other
	# methods that write to the standard output. This redirection allows the code
	# to check and verify the output programmatically, especially in unit tests. 
	
	

	
	
if main == __name__:
	




